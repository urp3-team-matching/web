generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum ProposerType {
  PROFESSOR
  STUDENT
  HOST
}


model Topic {
  id        Int     @id @default(autoincrement())

  name     String
  content   String
  proposerType ProposerType
  proposerName String
  viewCount Int     @default(0)

  createdDatetime DateTime @default(now())
  updatedDatetime DateTime @default(now())
  teams Team[]

  passwordHash String @map("password")
}

model Team {
  id    Int     @id @default(autoincrement())

  topicId Int
  topic Topic @relation(fields: [topicId], references: [id])
  applicants Applicant[]

  name String
  content TeamContent?
  leaderName String
  viewCount Int     @default(0)
  createdDatetime DateTime @default(now())
  updatedDatetime DateTime @default(now())

  passwordHash String @map("password")
}

model TeamContent {
  id    Int     @id @default(autoincrement())

  teamId Int @unique
  team Team @relation(fields: [teamId], references: [id])

  background String
  objective String
  method String
  result String
}

model Applicant {
  id    Int     @id @default(autoincrement())

  teamId Int
  team Team @relation(fields: [teamId], references: [id])

  nickName String
  email String
  phone String
  content String
  profileImage String

  createdDatetime DateTime @default(now())
  updatedDatetime DateTime @default(now())

  passwordHash String @map("password")
}